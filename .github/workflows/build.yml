name: Build Electron App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows
          - os: macos-latest
            platform: mac-intel
          - os: macos-14
            platform: mac-arm

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Set npm registry mirror
        run: |
          npm config set registry https://registry.npmjs.org/

      - name: Install dependencies
        run: npm install

      - name: Build Electron app
        run: npm run build
        env:
          GH_TOKEN: ${{ secrets.PUBLIC_RELEASE }}
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Get Version (Linux/macOS)
        if: runner.os != 'Windows'
        id: get_version_unix
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Get Version (Windows)
        if: runner.os == 'Windows'
        id: get_version_windows
        run: |
          $version = (Get-Content package.json | ConvertFrom-Json).version
          echo "version=$version" >> $env:GITHUB_ENV

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}-build
          path: |
            release/**/*.{exe,dmg,AppImage,snap}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.version }}
          release_name: Release ${{ env.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLIC_RELEASE }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.version }}
          files: |
            release/**/*.{exe,dmg,AppImage,snap}
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLIC_RELEASE }}
